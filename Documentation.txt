diag_catch([V, H], [V1, H1])
[V, H] - положение охотника по горизонтали и вертикали
[V1, H1] - положение лисы по горизонтали и вертикали

охотник выше лисы по вертикали, если V<V1
охотник ниже лисы по вертикали, если V>V1
охотник левее лисы по горизонталиали, если H<H1
охотник правее лисы по горизонталиали, если H>H1

vert_catch, hor_catch - лиса поймана, если у нее и охотника равны вертикали
или горизонтали соответственно

diag_catch - есть несколько положений охотника и лисы друг относительно
друга
1) охотник ниже по вертикали и левее по горизонтали, надо искать вверх и
вправо по диагнонали -  diag_catch_up_right
2) охотник ниже по вертикали и правее по горизонтали, надо искать вверх и
влево по диагнонали - diag_catch_up_left
3)  охотник выше по вертикали и левее по горизонтали, надо искать вниз и
вправо по диагнонали - diag_catch_down_right
4) охотник выше по вертикали и правее по горизонтали, надо искать вниз и
влево по диагнонали - diag_catch_down_left

; - оператор или

В catch посылаю координаты охотника и координаты расставленных лис и проверяю, встал ли он так,
чтобы лиса оказалась с ним на вертикали, горизонтали или диагонали


random_list(N, T, L) :-
    findall([X,Y], (between(1,N,_), random(0, T,X), random(0, T, Y)), L).

Список случайно расставленных лис: N - число лис, T - наибольшее значение координат по вертикали и
горизонтали для каждой лисы, L - список расставленных лис

Добавил вычисление количества лис, пеленгующихся по всем напрявлениям
Проюблемы\Надо доделать:
1) Сделть предикат с поимкой лисы и удалением пойманной из списка
2) Придумать, как сделать список лис глобальным, который будет изменяться ТОЛЬКО при поимке лисы,
а не портиться при поиске лис по направлениям